buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'}

}

apply plugin: 'forge'

version = "SNAPSHOT-MC164"
group= "com.forgeessentials"
archivesBaseName = "forgeessentials"

minecraft {
	version = "1.6.4-9.11.1.964"
	assetDir = "rundir/assets"
}

repositories{ mavenLocal() }

processResources
{
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) { exclude 'mcmod.info' }
}

// core
jar{
    from project.sourceSets.main.output
    include "com/forgeessentials/core/**"
    include "com/forgeessentials/permission/**"
    include "com/forgeessentials/util/**"
    include "com/forgeessentials/data/**"
    include "com/forgeessentials/api/*.class"
    include "com/forgeessentials/api/permissions/**"
    include "com/forgeessentials/api/packetInspector/**"
    include "com/forgeessentials/api/json/**"
    include "logo.png"
    include "mcmod.info"
    include "forgeessentials_at.cfg"
}

//server complete
task completeZip(type: Zip, dependsOn: 'reobf') {
    into('coremods') { from project.tasks.jar.getArchivePath() }
}

def list = [
    'auth',
    'backup',
    'chat',
    'commands',
    'economy',
    'playerlogger',
    'protection',
    'questioner',
    'snooper',
    'servervote',
    'scripting',
    'tickets',
    'worldborder',
    'worldcontrol',
    'afterlife',
    'client'
]

list.each { name ->
    def taskName = name + "Jar"
    def newTask = project.tasks.create(name: taskName, dependsOn: "jar", type: Jar) {
        from sourceSets.main.output
        appendix = name
        include "com/forgeessentials/$name/**"
        include "com/forgeessentials/api/$name/**"
        if (name == 'client') {
                include 'logo.png', 'mcmod.info', 'FEReadme.txt', 'HowToGetFESupport.txt'
        }
    }
    
    reobf {
        reobf(newTask) { reobfSpec ->
            reobfSpec.classpath = project.sourceSets.main.compileClasspath
        }
    }

    artifacts {
        archives newTask
    }

    if (name == 'client')
        return;

    project.tasks.completeZip {
        into('mods') { from newTask.getArchivePath() }
    }        
}

build.dependsOn "completeZip"

dependencies {
    compile 'org.pircbotx:pircbotx:1.9'
    compile 'com.h2database:h2:1.3.175'
    compile 'mysql:mysql-connector-java:5.1.22'
}
